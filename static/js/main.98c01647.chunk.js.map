{"version":3,"sources":["registerServiceWorker.js","pages/Home/index.js","consts/actionTypes.js","redux/selectors/index.js","components/MovieResult/style.js","components/MovieResult/index.js","pages/Results/index.js","redux/actions/search.js","pages/MovieDetail/style.js","pages/MovieDetail/index.js","App.js","redux/reducers/search.js","redux/reducers/index.js","redux/api/index.js","redux/sagas/search.js","redux/sagas/index.js","redux/store/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","history","useState","searchText","setSearchText","Container","Card","Grid","container","Typography","icon","faCoffee","Icon","className","color","TextField","type","value","placeholder","onChange","event","target","Button","variant","size","onClick","push","SEARCH_MOVIE_START","SEARCH_MOVIE_ERROR","SEARCH_MOVIE_COMPLETE","SearchActionByMovieTypes","SEARCH_MOVIE_ID_START","SEARCH_MOVIE_ID_ERROR","SEARCH_MOVIE_ID_COMPLETE","isSearchLoading","get","contenedStyleObj","display","alignsItems","justifyContent","makeStyles","height","flexDirection","cardContainer","width","padding","poster","boxShadow","title","fontSize","titleGridContainer","textFieldSearch","searchBotton","margin","withRouter","Poster","Title","Type","Year","imdbID","classes","style","item","src","alt","dispatch","useDispatch","movies","useSelector","movieResults","isLoading","isLokked","setIsLokked","useEffect","movieName","queryString","parse","search","payload","map","index","key","CircularProgress","movieResult","movieResultSelector","movieId","params","id","Actors","Director","Country","Rated","Genre","Awards","Plot","App","store","exact","path","component","Home","Results","MovieDetail","initialState","rootReducer","combineReducers","action","results","data","Search","movie","apiCall","url","headers","method","axios","searchMovie","searchMovieById","call","put","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","configureStore","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.98c01647.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Container, Typography, Grid, Card, TextField, Button } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default ({history}) => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const handleSetSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    const handleSearchText = event => {\r\n        // searchText stado actual del in put\r\n        history.push(`/results?movieName=${searchText}`);\r\n    };\r\n    return (\r\n        <Container> \r\n            <Card>\r\n                <Grid container>\r\n                    <Grid>\r\n                        <Typography>\r\n                            Bienvenido <FontAwesomeIcon icon={faCoffee} />\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Icon className=\"fa fa-video\" color=\"action\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <TextField\r\n                    type=\"search\"\r\n                    value={searchText}\r\n                    placeholder=\"Buscar...\"\r\n                    onChange={ handleSetSearchText }\r\n                />\r\n                <Grid>\r\n                    <Button variant=\"contained\" size=\"large\" onClick={handleSearchText}>\r\n                        Buscar\r\n                    </Button>\r\n                </Grid>\r\n            </Card> \r\n        </Container>\r\n    )\r\n}","export const SEARCH_MOVIE_START = 'SEARCH START';\r\nexport const SEARCH_MOVIE_ERROR = 'SEARCH ERROR';\r\nexport const SEARCH_MOVIE_COMPLETE = 'SEARCH COMPLETE';\r\n\r\nexport const SearchActionByMovieTypes = {\r\n    SEARCH_MOVIE_ID_START: 'SEARCH MOVIE ID START',\r\n    SEARCH_MOVIE_ID_ERROR: 'SEARCH MOVIE ID ERROR',\r\n    SEARCH_MOVIE_ID_COMPLETE: 'SEARCH MOVIE ID COMPLETE',\r\n}","import { get } from \"lodash\";\r\n\r\nexport const isSearchLoading = state => get(state, 'search.isLoading');\r\nexport const movieResults = state => get(state, 'search.movieResults');\r\nexport const movieResult = state => get(state, 'search.movieResult');","import { makeStyles } from '@material-ui/core';\r\n\r\nconst contenedStyleObj = {\r\n    display: 'flex',\r\n    alignsItems: 'center',\r\n    justifyContent: 'center',\r\n}\r\n\r\nexport default makeStyles({\r\n    container: {\r\n        height: '100vh',\r\n        flexDirection: 'column',\r\n        ...contenedStyleObj\r\n    },\r\n    cardContainer: {\r\n        height: 200,\r\n        width: 200,\r\n        padding: '2rem',\r\n        ...contenedStyleObj\r\n    },\r\n    poster: {\r\n        width: 120,\r\n        boxShadow: \"8px 15px 10px #9E9E9E\"\r\n    },\r\n    title: {\r\n        fontSize: '4rem'\r\n    },\r\n    titleGridContainer: {\r\n        ...contenedStyleObj,\r\n        fontSize: '2rem'\r\n    },\r\n    textFieldSearch: {\r\n        width: '90%'\r\n    }, \r\n    searchBotton: {\r\n        margin: 10,\r\n        \r\n    }\r\n})","import React from \"react\";\r\nimport { Card, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport style from \"./style\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst MovieResult = ({ Poster, Title, Type, Year, imdbID, history }) => {\r\n\r\n    const classes = style();\r\n    \r\n    const handleSeeMovie = () => {\r\n        history.push(`/movie/${imdbID}`);\r\n    };\r\n\r\n    return ( \r\n        <Card className={classes.container}>\r\n            <Grid item>\r\n                <img className={classes.poster} src={Poster} alt={Title} />\r\n            </Grid>\r\n            <Grid item className={classes.titleGridContainer}>\r\n                <Typography> {imdbID} </Typography>\r\n                <Typography> {Title} </Typography>\r\n                <Typography> {Type} </Typography>\r\n                <Typography> {Year} </Typography>\r\n                <Button color=\"primary\" variant=\"contained\" onClick={handleSeeMovie} > Ver mas </Button>\r\n            </Grid>\r\n        </Card> \r\n    );\r\n\r\n}\r\n\r\nexport default withRouter( MovieResult );","// TERCEROS\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Grid, Card, CircularProgress } from '@material-ui/core';\r\nimport queryString from 'query-string';\r\n\r\n// PROPIOS\r\nimport { searchMovie } from \"../../redux/actions/search\";\r\nimport { movieResults, isSearchLoading } from \"../../redux/selectors\";\r\nimport MovieResult from '../../components/MovieResult';\r\n\r\n\r\nexport default ({location}) => {\r\n    const dispatch = useDispatch();\r\n    const movies = useSelector( state => movieResults(state) );\r\n    const isLoading = useSelector( state => isSearchLoading(state) );\r\n    const [isLokked, setIsLokked] = useState(false);\r\n\r\n    useEffect( () => {\r\n        const { movieName } = queryString.parse(location.search);\r\n        if( movieName && !isLokked ) { setIsLokked(true); dispatch( searchMovie({ movieName }) ); };\r\n    } );\r\n\r\n    // componente html para cargar las imagenes\r\n    const renderMovies = () => {\r\n        if(movies){ return movies.map( (value, index) => <MovieResult key={index} {...value} /> ); }\r\n        else if(isLoading) { return <CircularProgress size={70} color=\"primary\" /> }\r\n        else { return <div></div> }\r\n    };\r\n\r\n    return (\r\n        <Container> \r\n            <Card>\r\n                <Grid container>\r\n                    {renderMovies()}\r\n                </Grid>\r\n                \r\n            </Card> \r\n        </Container>)\r\n}","import { SEARCH_MOVIE_START, SearchActionByMovieTypes } from '../../consts/actionTypes'\r\n\r\nexport const searchMovie = payload => ({\r\n    type: SEARCH_MOVIE_START,\r\n    payload\r\n});\r\n \r\nexport const searchMovieById = payload => ({\r\n    type: SearchActionByMovieTypes.SEARCH_MOVIE_ID_START,\r\n    payload\r\n});","import { makeStyles } from '@material-ui/core';\r\n\r\nconst contenedStyleObj = {\r\n    display: 'flex',\r\n    alignsItems: 'center',\r\n    justifyContent: 'center',\r\n}\r\n\r\nexport default makeStyles({\r\n    container: {\r\n        height: '95vh',\r\n        flexDirection: 'column',\r\n        ...contenedStyleObj\r\n    },\r\n    cardContainer: {\r\n        height: 200,\r\n        width: 200,\r\n        padding: '2rem',\r\n        ...contenedStyleObj\r\n    },\r\n    poster: {\r\n        width: 120,\r\n        boxShadow: \"8px 15px 10px #9E9E9E\"\r\n    },\r\n    title: {\r\n        fontSize: '4rem'\r\n    },\r\n    titleGridContainer: {\r\n        ...contenedStyleObj,\r\n        fontSize: '2rem'\r\n    },\r\n    textFieldSearch: {\r\n        width: '90%'\r\n    }, \r\n    searchBotton: {\r\n        margin: 10,\r\n        \r\n    }\r\n})","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Card, Grid, Typography, CircularProgress } from \"@material-ui/core\";\r\nimport style from \"./style\";\r\n\r\nimport { movieResult as movieResultSelector, isSearchLoading } from '../../redux/selectors';\r\nimport { searchMovieById } from \"../../redux/actions/search\";\r\n\r\nexport default ({ match }) => {\r\n\r\n    const classes = style();\r\n    const dispatch = useDispatch();\r\n    const movieResult = useSelector( state => movieResultSelector(state) );\r\n    const movieId = match.params.id;\r\n    const isLoading = useSelector( state => isSearchLoading(state) );\r\n\r\n    useEffect( () => {\r\n        if( (!movieResult && movieId) || (movieResult.imdbID !== movieId) ){\r\n            dispatch( searchMovieById({ movieId }) ); \r\n        } \r\n    } );\r\n\r\n    if( !movieResult || isLoading ){ \r\n        return <Card className={classes.container}>\r\n            <Grid item className={classes.titleGridContainer}>\r\n                <CircularProgress size={70} color=\"primary\" /> \r\n            </Grid>\r\n            </Card>\r\n    }\r\n\r\n    return ( \r\n        <Card className={classes.container}>\r\n            <Grid item>\r\n                <Typography variant=\"h3\"> {movieResult.Title} </Typography>\r\n                <img src={movieResult.Poster} />\r\n                <Typography> <strong> Actores: </strong> {movieResult.Actors} </Typography>\r\n                <Typography> <strong> Director: </strong> {movieResult.Director} </Typography>\r\n                <Typography> <strong> Pais: </strong> {movieResult.Country} </Typography>\r\n                <Typography> <strong> Clasificación: </strong> {movieResult.Rated} </Typography>\r\n                <Typography> <strong> Géneros: </strong> {movieResult.Genre} </Typography>\r\n                <Typography> <strong> Actores: </strong> {movieResult.Actors} </Typography>\r\n                <Typography> <strong> Premios: </strong> {movieResult.Awards} </Typography>\r\n                <Typography> <strong> Sinopsis: </strong> {movieResult.Plot} </Typography>\r\n            </Grid>\r\n        </Card> \r\n    );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Home from './pages/Home';\r\nimport Results from './pages/Results';\r\nimport MovieDetail from './pages/MovieDetail';\r\n\r\nconst App = ({ store }) => (\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t<Route path=\"/results\" component={Results} />\r\n\t\t\t\t<Route path=\"/movie/:id\" component={MovieDetail} />\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t</Provider>\r\n);\r\n\r\nApp.propTypes = {\r\n\tstore: PropTypes.object.isRequired\r\n};\r\n\r\nexport default App;\r\n","import { \r\n\tSEARCH_MOVIE_START, \r\n\tSEARCH_MOVIE_ERROR, \r\n\tSEARCH_MOVIE_COMPLETE,\r\n\tSearchActionByMovieTypes\r\n} from '../../consts/actionTypes';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\t// todos\r\n\t\tcase SEARCH_MOVIE_START:\r\n\t\t\treturn {...state, isLoading: true};\r\n\t\t\tbreak;\r\n\t\tcase SEARCH_MOVIE_ERROR:\r\n\t\t\treturn {...state, isLoading: false, movieResults: null};\r\n\t\t\tbreak;\r\n\t\tcase SEARCH_MOVIE_COMPLETE:\r\n\t\t\treturn {...state, isLoading: false, movieResults: action.results.data.Search };\r\n\t\t\tbreak;\r\n\r\n\t\t// por id\r\n\t\tcase SearchActionByMovieTypes.SEARCH_MOVIE_ID_START:\r\n\t\t\treturn {...state, isLoading: true, movieResults: null};\r\n\t\t\tbreak;\r\n\t\tcase SearchActionByMovieTypes.SEARCH_MOVIE_ID_ERROR:\r\n\t\t\treturn {...state, isLoading: false, movieResults: null};\r\n\t\t\tbreak;\r\n\t\tcase SearchActionByMovieTypes.SEARCH_MOVIE_ID_COMPLETE:\r\n\t\t\treturn {...state, isLoading: false, movieResult: action.movie.data };\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport search from \"./search\";\r\nconst rootReducer = combineReducers({\r\n\tsearch\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\nconst baseUrl = 'https://www.omdbapi.com/?apikey=a6abe46b';\r\n\r\nexport const apiCall = ( url, data, headers, method ) => axios({\r\n    method,\r\n    url: baseUrl+url,\r\n    data,\r\n    headers\r\n})","import { put, call, takeLatest } from 'redux-saga/effects';\r\nimport { SEARCH_MOVIE_START, SEARCH_MOVIE_ERROR, SEARCH_MOVIE_COMPLETE, SearchActionByMovieTypes } from '../../consts/actionTypes';\r\nimport { apiCall } from \"../api\";\r\n\r\n/**\r\n * Cuando se dispare las actions COMPLETE O ERROR \r\n * se va a ejecutar las acciones correspondiente\r\n * @param {*} param0 \r\n */\r\nexport function* searchMovie({ payload }) {\r\n    try {\r\n        const results = yield call( apiCall, `&s=${payload.movieName}`, null, null, 'GET' );\r\n        yield put({ type: SEARCH_MOVIE_COMPLETE, results });\r\n    } catch (error) {\r\n        yield put({ type: SEARCH_MOVIE_ERROR, error });\r\n    }\r\n}\r\n\r\n/**\r\n * Cuando se dispare las actions COMPLETE O ERROR \r\n * se va a ejecutar las acciones correspondiente\r\n * @param {*} param0 \r\n */\r\nexport function* searchMovieById({ payload }) {\r\n    try {\r\n        const movie = yield call( apiCall, `&i=${payload.movieId}`, null, null, 'GET' );\r\n        yield put({ type: SearchActionByMovieTypes.SEARCH_MOVIE_ID_COMPLETE, movie });\r\n    } catch (error) {\r\n        yield put({ type: SearchActionByMovieTypes.SEARCH_MOVIE_ID_ERROR, error });\r\n    }\r\n}\r\n\r\nexport default function* search() {\r\n    // va a estar escuchando a la action\r\n    // cuando inicie va a disparar la funcion searchMovie\r\n    yield takeLatest(SEARCH_MOVIE_START, searchMovie);\r\n    yield takeLatest(SearchActionByMovieTypes.SEARCH_MOVIE_ID_START, searchMovieById);\r\n}","import { all } from 'redux-saga/effects';\r\nimport search from './search'; \r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\tsearch()\r\n\t]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst configureStore = () => {\r\n\tconst sagaMiddleware = createSagaMiddleware();\r\n\treturn {\r\n\t\t...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\r\n\t\trunSaga: sagaMiddleware.run(rootSaga)\r\n\t};\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport App from './App';\r\n\r\nimport configureStore from './redux/store';\r\nconst store = configureStore();\r\n\r\nReactDOM.render(<App store={store} />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}